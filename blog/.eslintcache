[{"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\index.js":"1","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\App.js":"2","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Signup.js":"3","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Signin.js":"4","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Home.js":"5","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\reducer\\userReducer.js":"6","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Navbar.js":"7","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\ControlledEditor.js":"8","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Explore.js":"9","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\BlogCard.js":"10","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Profile.js":"11","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\UserProfile.js":"12","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\EditBlog.js":"13"},{"size":197,"mtime":1610981920818,"results":"14","hashOfConfig":"15"},{"size":2094,"mtime":1620235349686,"results":"16","hashOfConfig":"15"},{"size":5205,"mtime":1620232550066,"results":"17","hashOfConfig":"15"},{"size":2762,"mtime":1620235188534,"results":"18","hashOfConfig":"15"},{"size":159,"mtime":1619350049855,"results":"19","hashOfConfig":"15"},{"size":202,"mtime":1619351469301,"results":"20","hashOfConfig":"15"},{"size":1307,"mtime":1620233300224,"results":"21","hashOfConfig":"15"},{"size":2503,"mtime":1620235681772,"results":"22","hashOfConfig":"15"},{"size":1993,"mtime":1620312429030,"results":"23","hashOfConfig":"15"},{"size":1238,"mtime":1620571718128,"results":"24","hashOfConfig":"15"},{"size":4560,"mtime":1620281859340,"results":"25","hashOfConfig":"15"},{"size":180,"mtime":1619866687099,"results":"26","hashOfConfig":"15"},{"size":2723,"mtime":1620236101785,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"14a546j",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\index.js",[],["58","59"],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\App.js",["60","61"],"import React,{useContext,useReducer,createContext, useEffect} from 'react'\r\nimport Signup from './components/Signup'\r\nimport Signin from './components/Signin'\r\nimport Home from './components/Home'\r\nimport Explore from './components/Explore'\r\nimport { initialState, reducer } from './reducer/userReducer'\r\nimport {BrowserRouter,Route, Switch, useHistory} from 'react-router-dom'\r\nimport Navbar from './components/Navbar'\r\nimport ControlledEditor from './components/ControlledEditor'\r\nimport Profile from './components/Profile'\r\nimport UserProfile from './components/UserProfile'\r\nimport EditBlog from './components/EditBlog'\r\n\r\nexport const UserContext = createContext()\r\n\r\nconst Routing = ()=>{\r\n    const history = useHistory()\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n        const user = JSON.parse(localStorage.getItem(\"user\"))\r\n        if(user){\r\n            dispatch({type:'USER',payload:user})\r\n        }else{\r\n            history.push('/signin')\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/'>\r\n                <Home />\r\n            </Route>\r\n            <Route path='/signup'>\r\n            <Signup />\r\n          </Route>\r\n          <Route path='/signin'>\r\n            <Signin />\r\n          </Route>\r\n          <Route path='/create'>\r\n            <ControlledEditor />\r\n          </Route>\r\n          <Route path='/explore'>\r\n            <Explore />\r\n          </Route>\r\n          <Route exact path='/profile'>\r\n            <Profile />\r\n          </Route>\r\n          <Route path='/profile/:userid'>\r\n            <UserProfile />\r\n          </Route>\r\n          <Route path='/editBlog'>\r\n            <EditBlog />\r\n          </Route>\r\n \r\n        </Switch>\r\n    )\r\n}\r\n\r\n\r\nconst App =()=> {\r\n\r\n    const [state,dispatch] = useReducer(reducer,initialState)\r\n\r\n    return (\r\n        \r\n          <UserContext.Provider value={{state,dispatch}}>\r\n          <BrowserRouter>\r\n             <Navbar />\r\n             <Routing />\r\n          </BrowserRouter>\r\n          </UserContext.Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Signup.js",["62","63"],"import React,{useState,useEffect} from 'react'\r\nimport {useHistory } from 'react-router-dom'\r\nimport '../css/Signup.css'\r\n\r\n\r\nconst Signup = ()=> {\r\n \r\n    const history = useHistory()\r\n\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [confirmPassword,setConfirmPassword] = useState('')\r\n    const [error,setError] = useState('') \r\n    const [mobileError,setMobileError] = useState('')\r\n    const [username,setUsername]=useState('')\r\n    const [mobile,setMobile]= useState('')\r\n    const [image,setImage] = useState(undefined) \r\n    const [check,setCheck] = useState(false)\r\n    const [url,setUrl] = useState('')\r\n    const [checkError,setCheckError] = useState('')\r\n    const [status,setStatus] = useState('')\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n            uploadFields()\r\n        }\r\n \r\n    },[url])\r\n    const emailHandler = (e)=>{\r\n        setEmail(e.target.value)\r\n    }\r\n    const passwordHandler = (e)=>{\r\n        setPassword(e.target.value)\r\n\r\n    } \r\n    const confirmPasswordHandler = (e)=>{\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n    const handleNameChange = (e)=>{\r\n        setUsername(e.target.value)\r\n    }\r\n    const handleMobileChange =(e)=>{\r\n        \r\n      setMobile(e.target.value)\r\n    \r\n  }\r\n  const uploadPic = ()=>{\r\n    const data = new FormData()\r\n    data.append('file',image)\r\n    data.append('upload_preset','blogspreset')\r\n    data.append('cloud_name','blogsimagesaccount')\r\n    fetch('https://api.cloudinary.com/v1_1/blogsimagesaccount/image/upload',{\r\n        method:'post',\r\n        body:data\r\n    }).then(res=>res.json())\r\n    .then(data=>setUrl(data.url))\r\n    .catch(err=>console.error(err))\r\n  }\r\n  const uploadFields = ()=>{\r\n\r\n    fetch('http://localhost:5000/signup',{\r\n        method:'post', \r\n       headers:{\r\n           \"content-Type\":\"application/json\"\r\n       },\r\n       body:JSON.stringify({\r\n           username,\r\n           email,\r\n           mobile,\r\n           password,\r\n           check,\r\n           pic:url || 'https://res.cloudinary.com/blogsimagesaccount/image/upload/v1610867243/default-profile-picture_p1nqbe.png',\r\n           timeOfCreation:Date.now()\r\n\r\n\r\n       })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n        if(data.error){\r\n          setStatus(data.error)\r\n        }\r\n        else{\r\n          setStatus(data.message)\r\n           history.push('/signin')\r\n        }\r\n}).catch(err=>console.log(err)).catch(err=>console.log(err))\r\n  }\r\n        \r\n    \r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        email.trim()\r\n        password.trim()\r\n        username.trim()\r\n        mobile.trim()\r\n        if(password === confirmPassword && mobile.match('^[6789][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$') && check ) {\r\n            setError('')\r\n            setMobileError('')\r\n            setCheckError('')\r\n            \r\n            if(image){\r\n                uploadPic()\r\n            }else{\r\n                uploadFields()\r\n            }\r\n        } \r\n        else{ \r\n            if(password !== confirmPassword)\r\n         setError('Enter same passwords')\r\n        \r\n        if(!mobile.match('^[6789][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]$'))\r\n            setMobileError('Enter valid mobile number')\r\n        if(!check)\r\n            setCheckError('Please accept all terms and conditions to continue...')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"signup-form\" onSubmit={submitHandler}>\r\n                <input className=\"basic-input\" type=\"text\" placeholder=\"Enter Name\" value={username} onChange={handleNameChange} required={true} autoFocus={true}/>\r\n                <input className=\"basic-input\" type=\"text\" placeholder=\"Enter mobile number \" value={mobile} inputMode=\"numeric\" onChange={handleMobileChange} required={true} />\r\n                <input  className=\"basic-input\"  type=\"email\" placeholder=\"Email\" value={email} onChange={emailHandler} required={true}  />\r\n                <input className=\"basic-input\"  type=\"password\" placeholder=\"enter password\" value={password} onChange={passwordHandler} required={true} autoComplete=\"off\"/>\r\n                <input  className=\"basic-input\"  type=\"password\" placeholder=\"re-enter password\" value={confirmPassword} onChange={confirmPasswordHandler} required={true} autoComplete=\"off\"/>\r\n               <span className=\"signup-span\">\r\n               <label className=\"profile-picture-label\" htmlFor=\"dp\">Upload profile picture</label>\r\n               <input type=\"file\" className=\"profile-picture-input\" placeholder=\"Display piture\" name=\"dp\" onChange = {(e)=>setImage(e.target.files[0])} />\r\n               </span>\r\n               <span className=\"signup-span\"> <input type=\"checkbox\" name=\"terms\" value=\"accept\" onChange={()=>setCheck(!check)}></input>\r\n                <label htmlFor=\"terms\">I accept all <a href=\"#\">terms and conditions.</a></label></span>\r\n                <p>{error}</p>\r\n                <p>{mobileError}</p>\r\n                <p>{checkError}</p>\r\n                <p>{status}</p>\r\n                <button type=\"submit\" >Signup</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Signin.js",[],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Home.js",[],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\reducer\\userReducer.js",[],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Navbar.js",[],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\ControlledEditor.js",[],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Explore.js",[],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\BlogCard.js",[],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\Profile.js",["64","65"],"import React, { useEffect, useState,useRef } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport '../css/Profile.css'\r\n\r\nconst Profile = () => {\r\n\r\n    const inputFileRef = useRef( null );\r\n\r\n    const [profile,setProfile] = useState('')\r\n    const [image,setImage] = useState('')\r\n\r\n    const userId = JSON.parse( localStorage.getItem(\"user\") )._id\r\n    const editPost = (id,title,description,body)=>{\r\n       // setEdit({id,title,description,body})\r\n        // return \r\n        history.push({\r\n            pathname:'/editBlog',\r\n            state:{\r\n                id,\r\n                title,\r\n                description,\r\n                body\r\n            }\r\n        })\r\n    }\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        fetch(`http://localhost:5000/user/${userId}`,{\r\n            headers:{\r\n                Authorization:'Bearer '+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n        .then(res => setProfile(res))\r\n        .catch(err => console.log(err))\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if(image){\r\n\r\n            const data = new FormData()\r\n            data.append('file',image)\r\n            data.append('upload_preset','blogspreset')\r\n            data.append('cloud_name','blogsimagesaccount')\r\n            fetch('https://api.cloudinary.com/v1_1/blogsimagesaccount/image/upload',{\r\n                method:'post',\r\n                body:data\r\n            }).then(res=>res.json())\r\n                .then(data=>{\r\n                    fetch('http://localhost:5000/updateProfilePic',{\r\n                        method:'put',\r\n                        headers:{\r\n                            'Content-Type':'application/json',\r\n                            'Authorization':'Bearer '+localStorage.getItem(\"jwt\")\r\n                        },\r\n                        body:JSON.stringify(\r\n                            {pic:data.url}\r\n                        )\r\n                    }).then(data => data.json())\r\n                    .then(data => {\r\n                        const oldUser = JSON.parse(localStorage.getItem('user'))\r\n                        oldUser.pic = data.pic\r\n                        localStorage.setItem('user',JSON.stringify(oldUser))\r\n                        setProfile({user:{\r\n                            ...profile.user,\r\n                            pic:data.pic\r\n                          },\r\n                          posts:profile.posts\r\n                        })\r\n                    })\r\n                })\r\n\r\n\r\n        }\r\n        \r\n    }, [image])\r\n    const uploadFile = (e)=>{\r\n        setImage(e.target.files[0])\r\n        \r\n    }\r\n      const updatePic = () => {\r\n        inputFileRef.current.click();\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            \r\n           {  profile ? <div>\r\n            <div className=\"profile-user\">\r\n                <div className=\"profile-pic-name\">\r\n                     <button className=\"profile-update-button\" onClick={updatePic}><img src={profile.user.pic} alt=\"user display\" width=\"40px\" height=\"50px\"/></button>\r\n                     <h2 className=\"profile-username\">{profile.user.username}</h2>\r\n                </div>\r\n                <div className=\"followers-following\">\r\n                    <p className=\"profile-followers\">{profile.user.followers.length} followers</p>\r\n                    <p className=\"profile-following\">{profile.user.following.length} following</p>\r\n                </div>\r\n\r\n                <input\r\n                     hidden={true}\r\n                    type=\"file\"\r\n                     ref={inputFileRef}\r\n                    onChange={e => uploadFile(e)}\r\n                 />\r\n            </div>\r\n               \r\n                <br/>\r\n                <hr/>\r\n                <div className=\"posts-container\">\r\n                {\r\n                    profile.posts.map(post => \r\n                        {return(<div className=\"profile-posts\" key={post._id}>\r\n                           <button className=\"edit-post-button\" onClick={()=>editPost(post._id,post.title,post.description,post.body)}> <p className=\"profile-title\"><strong>{post.title}</strong></p></button> \r\n                            <p className=\"profile-description\">{post.description}</p>\r\n                        </div>\r\n                        )}\r\n                    )\r\n                }\r\n\r\n                </div>\r\n                \r\n                \r\n                </div>\r\n               :\r\n           <p>Loading...</p>\r\n            \r\n           }\r\n         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\UserProfile.js",[],"C:\\Users\\saket\\Desktop\\react-course-projects\\blogapp\\blog\\src\\components\\EditBlog.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":18,"column":12,"nodeType":"72","messageId":"73","endLine":18,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":26,"column":7,"nodeType":"76","endLine":26,"endColumn":9,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":28,"column":7,"nodeType":"76","endLine":28,"endColumn":12,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":131,"column":53,"nodeType":"82","endLine":131,"endColumn":65},{"ruleId":"74","severity":1,"message":"83","line":35,"column":7,"nodeType":"76","endLine":35,"endColumn":9,"suggestions":"84"},{"ruleId":"74","severity":1,"message":"85","line":75,"column":8,"nodeType":"76","endLine":75,"endColumn":15,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["90"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'profile.posts' and 'profile.user'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setProfile' needs the current value of 'profile.user'.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [dispatch, history]",{"range":"101","text":"102"},"Update the dependencies array to be: [uploadFields, url]",{"range":"103","text":"104"},"Update the dependencies array to be: [userId]",{"range":"105","text":"106"},"Update the dependencies array to be: [image, profile.posts, profile.user]",{"range":"107","text":"108"},[1007,1009],"[dispatch, history]",[856,861],"[uploadFields, url]",[1036,1038],"[userId]",[2543,2550],"[image, profile.posts, profile.user]"]